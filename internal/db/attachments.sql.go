// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: attachments.sql

package db

import (
	"context"
	"database/sql"
)

const getEmailAttachments = `-- name: GetEmailAttachments :many
SELECT id, email_id, created_at, type, original_filename, saved_filename, path, cid FROM attachments WHERE email_id = $1
`

func (q *Queries) GetEmailAttachments(ctx context.Context, emailID int32) ([]Attachment, error) {
	rows, err := q.db.QueryContext(ctx, getEmailAttachments, emailID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Attachment
	for rows.Next() {
		var i Attachment
		if err := rows.Scan(
			&i.ID,
			&i.EmailID,
			&i.CreatedAt,
			&i.Type,
			&i.OriginalFilename,
			&i.SavedFilename,
			&i.Path,
			&i.Cid,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const saveAttachment = `-- name: SaveAttachment :one
INSERT INTO attachments (email_id, created_at, type, original_filename, saved_filename, path, cid)
VALUES ($1, NOW(), $2, $3, $4, $5, $6)
RETURNING id, email_id, created_at, type, original_filename, saved_filename, path, cid
`

type SaveAttachmentParams struct {
	EmailID          int32
	Type             string
	OriginalFilename string
	SavedFilename    string
	Path             string
	Cid              sql.NullString
}

func (q *Queries) SaveAttachment(ctx context.Context, arg SaveAttachmentParams) (Attachment, error) {
	row := q.db.QueryRowContext(ctx, saveAttachment,
		arg.EmailID,
		arg.Type,
		arg.OriginalFilename,
		arg.SavedFilename,
		arg.Path,
		arg.Cid,
	)
	var i Attachment
	err := row.Scan(
		&i.ID,
		&i.EmailID,
		&i.CreatedAt,
		&i.Type,
		&i.OriginalFilename,
		&i.SavedFilename,
		&i.Path,
		&i.Cid,
	)
	return i, err
}

const updateAttachmentPathFilenames = `-- name: UpdateAttachmentPathFilenames :exec
UPDATE attachments SET path = $1, saved_filename = $2, original_filename = $3 WHERE id = $4
`

type UpdateAttachmentPathFilenamesParams struct {
	Path             string
	SavedFilename    string
	OriginalFilename string
	ID               int32
}

func (q *Queries) UpdateAttachmentPathFilenames(ctx context.Context, arg UpdateAttachmentPathFilenamesParams) error {
	_, err := q.db.ExecContext(ctx, updateAttachmentPathFilenames,
		arg.Path,
		arg.SavedFilename,
		arg.OriginalFilename,
		arg.ID,
	)
	return err
}
